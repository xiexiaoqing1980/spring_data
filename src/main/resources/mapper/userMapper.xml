<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
mapper接口代理实现编写规则:
	1. 映射文件中namespace要等于接口的全路径名称
	2. 映射文件中sql语句id要等于接口的方法名称
	3. 映射文件中传入参数类型要等于接口方法的传入参数类型
	4. 映射文件中返回结果集类型要等于接口方法的返回值类型
 -->
<mapper namespace="kingdee.test.platform.dao.userMapper">

  <!-- 声明sql片段 -->
  <sql id="userwhere">
    <where>
      <!-- 去掉第一个条件的and -->
      <if test="username!=null and username!=''">
        username like '%${username}%'
      </if>
      <if test="sex!=null and sex!=''">
        and sex=#{sex}
      </if>
    </where>
  </sql>

  <!--
  id:sql语句唯一标识
  parameterType:指定传入参数类型
  resultType:返回结果集类型
  #{}占位符:起到占位作用,如果传入的是基本类型(string,long,double,int,boolean,float等),那么#{}中的变量名称可以随意写.
   -->
  <select id="findUserById" parameterType="int" resultType="kingdee.test.platform.pojo.user">
		select * from user where id=#{id}
	</select>

  <select id="findUsers"  resultType="kingdee.test.platform.pojo.user">
		select * from user
	</select>

  <insert id="adduser" parameterType="kingdee.test.platform.pojo.user" >
		insert into user (username,birthday,sex,address) values(#{username},#{birthday},#{sex},#{address})
	</insert>

    <select id="findByPage" parameterType="java.lang.Integer" resultType="kingdee.test.platform.pojo.user">
		select * from user LIMIT #{start},#{end}
	</select>
    <delete id="deleteuser" parameterType="java.lang.Integer" >
		delete  from user where id=#{id}
	</delete>


</mapper>